<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="120" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2021-03-27" time="21:17:17">
  <environment user-domain="TABLET-80LO8A5Q" cwd="C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy" os-version="10.0.19042" user="petem" clr-version="Unknown" machine-name="TABLET-80LO8A5Q" platform="Microsoft Windows 10 Pro|C:\windows|\Device\Harddisk0\Partition3" nunit-version="2.5.8.0" />
  <culture-info current-culture="en-GB" current-uiculture="en-GB" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="2.946" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\tests\DoubleDeploy.Tests.ps1" executed="True" result="Success" success="True" time="2.7712" asserts="0" description="C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\tests\DoubleDeploy.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module" executed="True" result="Success" success="True" time="2.5821" asserts="0" description="Module">
            <results>
              <test-suite type="TestFixture" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1" executed="True" result="Success" success="True" time="0.4164" asserts="0" description="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1">
                <results>
                  <test-suite type="TestFixture" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis" executed="True" result="Success" success="True" time="0.3872" asserts="0" description="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis">
                    <results>
                      <test-suite type="TestFixture" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile" executed="True" result="Success" success="True" time="0.1958" asserts="0" description="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile">
                        <results>
                          <test-suite type="TestFixture" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.Help" executed="True" result="Success" success="True" time="0.1357" asserts="0" description="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.Help">
                            <results>
                              <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.Help.has synopsis" executed="True" result="Success" success="True" time="0.0296" asserts="0" description="has synopsis">
                                <results>
                                  <test-case description="has synopsis" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.Help.has synopsis(@{syntax=@{syntaxItem=@{name=Test-PublicFile; parameter=@{description=System.Management.Automation.PSObject[]; parameterValue=Int32; name=Scope; required=false; globbing=false; pipelineInput=true (ByPropertyName); position=1}}}; description=System.Management.Automation.PSObject[]; details=@{name=Test-PublicFile; description=System.Management.Automation.PSObject[]}; examples=@{example=@{code=An example; title=-------------------------- EXAMPLE 1 --------------------------; introduction=System.Management.Automation.PSObject[]; remarks=System.Management.Automation.PSObject[]}}; parameters=@{parameter=@{description=System.Management.Automation.PSObject[]; type=@{name=Int32}; parameterValue=Int32; name=Scope; defaultValue=0; required=false; globbing=false; pipelineInput=true (ByPropertyName); position=1}}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Test-PublicFile; Category=Function; Synopsis=Short description; Component=; Role=; Functionality=; ModuleName=DoubleDeploy})" time="0.0296" asserts="0" success="True" result="Success" executed="True" />
                                </results>
                              </test-suite>
                              <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.Help.has description" executed="True" result="Success" success="True" time="0.0124" asserts="0" description="has description">
                                <results>
                                  <test-case description="has description" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.Help.has description(@{syntax=@{syntaxItem=@{name=Test-PublicFile; parameter=@{description=System.Management.Automation.PSObject[]; parameterValue=Int32; name=Scope; required=false; globbing=false; pipelineInput=true (ByPropertyName); position=1}}}; description=System.Management.Automation.PSObject[]; details=@{name=Test-PublicFile; description=System.Management.Automation.PSObject[]}; examples=@{example=@{code=An example; title=-------------------------- EXAMPLE 1 --------------------------; introduction=System.Management.Automation.PSObject[]; remarks=System.Management.Automation.PSObject[]}}; parameters=@{parameter=@{description=System.Management.Automation.PSObject[]; type=@{name=Int32}; parameterValue=Int32; name=Scope; defaultValue=0; required=false; globbing=false; pipelineInput=true (ByPropertyName); position=1}}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Test-PublicFile; Category=Function; Synopsis=Short description; Component=; Role=; Functionality=; ModuleName=DoubleDeploy})" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                                </results>
                              </test-suite>
                              <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.Help.has example code" executed="True" result="Success" success="True" time="0.0075" asserts="0" description="has example code">
                                <results>
                                  <test-case description="has example code" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.Help.has example code(@{syntax=@{syntaxItem=@{name=Test-PublicFile; parameter=@{description=System.Management.Automation.PSObject[]; parameterValue=Int32; name=Scope; required=false; globbing=false; pipelineInput=true (ByPropertyName); position=1}}}; description=System.Management.Automation.PSObject[]; details=@{name=Test-PublicFile; description=System.Management.Automation.PSObject[]}; examples=@{example=@{code=An example; title=-------------------------- EXAMPLE 1 --------------------------; introduction=System.Management.Automation.PSObject[]; remarks=System.Management.Automation.PSObject[]}}; parameters=@{parameter=@{description=System.Management.Automation.PSObject[]; type=@{name=Int32}; parameterValue=Int32; name=Scope; defaultValue=0; required=false; globbing=false; pipelineInput=true (ByPropertyName); position=1}}; xmlns:maml=http://schemas.microsoft.com/maml/2004/10; xmlns:command=http://schemas.microsoft.com/maml/dev/command/2004/10; xmlns:dev=http://schemas.microsoft.com/maml/dev/2004/10; Name=Test-PublicFile; Category=Function; Synopsis=Short description; Component=; Role=; Functionality=; ModuleName=DoubleDeploy})" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                                </results>
                              </test-suite>
                              <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.Help.has description of parameter &lt;name&gt;" executed="True" result="Success" success="True" time="0.014" asserts="0" description="has description of parameter &lt;name&gt;">
                                <results>
                                  <test-case description="has description of parameter Scope" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.Help.has description of parameter Scope" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.is public" executed="True" result="Success" success="True" time="0.0227" asserts="0" description="is public">
                            <results>
                              <test-case description="is public" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.is public(&quot;Test-PublicFile&quot;,&quot;Test-PublicFile&quot;)" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                            </results>
                          </test-suite>
                          <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.has a related pester tests file" executed="True" result="Success" success="True" time="0.0103" asserts="0" description="has a related pester tests file">
                            <results>
                              <test-case description="has a related pester tests file" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.Test-PublicFile.has a related pester tests file(&quot;C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\tests&quot;,&quot;Test-PublicFile&quot;)" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-case description="exports the expected number of functions" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.Exported Function Analysis.exports the expected number of functions" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.has a valid manifest" executed="True" result="Success" success="True" time="0.144" asserts="0" description="has a valid manifest">
                    <results>
                      <test-case description="has a valid manifest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.has a valid manifest(&quot;C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1&quot;)" time="0.144" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.specifies valid root module" executed="True" result="Success" success="True" time="0.0039" asserts="0" description="specifies valid root module">
                    <results>
                      <test-case description="specifies valid root module" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.specifies valid root module(&quot;DoubleDeploy&quot;,&quot;DoubleDeploy.psm1&quot;)" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.has a valid description" executed="True" result="Success" success="True" time="0.0069" asserts="0" description="has a valid description">
                    <results>
                      <test-case description="has a valid description" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.has a valid description(&quot;Testing module deployment&quot;)" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.has a valid guid" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="has a valid guid">
                    <results>
                      <test-case description="has a valid guid" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.has a valid guid(cda8bb20-46a9-4043-a921-91cf5d492c87)" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.has a valid copyright" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="has a valid copyright">
                    <results>
                      <test-case description="has a valid copyright" name="Module.C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\DoubleDeploy\DoubleDeploy.psd1.has a valid copyright(&quot;Pete Maan 2020&quot;)" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Module.PSScriptAnalyzer Analysis" executed="True" result="Success" success="True" time="2.5529" asserts="0" description="Module.PSScriptAnalyzer Analysis">
                <results>
                  <test-suite type="TestFixture" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1" executed="True" result="Success" success="True" time="1.0734" asserts="0" description="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1">
                    <results>
                      <test-suite type="ParameterizedTest" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: &lt;RuleName&gt;" executed="True" result="Success" success="True" time="1.0277" asserts="0" description="passes rule: &lt;RuleName&gt;">
                        <results>
                          <test-case description="passes rule: PSAlignAssignmentStatement" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAlignAssignmentStatement" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingCmdletAliases" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidUsingCmdletAliases" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidAssignmentToAutomaticVariable" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidAssignmentToAutomaticVariable" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidDefaultValueSwitchParameter" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidDefaultValueSwitchParameter" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidDefaultValueForMandatoryParameter" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidDefaultValueForMandatoryParameter" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingEmptyCatchBlock" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidUsingEmptyCatchBlock" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidGlobalAliases" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidGlobalAliases" time="0.0204" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidGlobalFunctions" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidGlobalFunctions" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidGlobalVars" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidGlobalVars" time="0.0293" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidInvokingEmptyMembers" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidInvokingEmptyMembers" time="0.0204" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidLongLines" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidLongLines" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidNullOrEmptyHelpMessageAttribute" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidOverwritingBuiltInCmdlets" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidOverwritingBuiltInCmdlets" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSReservedCmdletChar" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSReservedCmdletChar" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSReservedParams" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSReservedParams" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidShouldContinueWithoutForce" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidShouldContinueWithoutForce" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingUsernameAndPasswordParams" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidUsingUsernameAndPasswordParams" time="0.02" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingComputerNameHardcoded" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidUsingComputerNameHardcoded" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingConvertToSecureStringWithPlainText" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingDeprecatedManifestFields" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidUsingDeprecatedManifestFields" time="0.0249" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingInvokeExpression" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidUsingInvokeExpression" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingPlainTextForPassword" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidUsingPlainTextForPassword" time="0.024" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingWMICmdlet" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidUsingWMICmdlet" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingWriteHost" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSAvoidUsingWriteHost" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseCompatibleCommands" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseCompatibleCommands" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseCompatibleSyntax" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseCompatibleSyntax" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseCompatibleTypes" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseCompatibleTypes" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSMisleadingBacktick" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSMisleadingBacktick" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSMissingModuleManifestField" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSMissingModuleManifestField" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSPlaceCloseBrace" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSPlaceCloseBrace" time="0.0248" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSPlaceOpenBrace" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSPlaceOpenBrace" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSPossibleIncorrectComparisonWithNull" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSPossibleIncorrectComparisonWithNull" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSPossibleIncorrectUsageOfRedirectionOperator" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSReviewUnusedParameter" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSReviewUnusedParameter" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseApprovedVerbs" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseApprovedVerbs" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseBOMForUnicodeEncodedFile" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseBOMForUnicodeEncodedFile" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseCmdletCorrectly" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseCmdletCorrectly" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseCompatibleCmdlets" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseCompatibleCmdlets" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseConsistentIndentation" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseConsistentIndentation" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseConsistentWhitespace" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseConsistentWhitespace" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseDeclaredVarsMoreThanAssignments" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseDeclaredVarsMoreThanAssignments" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseLiteralInitializerForHashtable" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseLiteralInitializerForHashtable" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseProcessBlockForPipelineCommand" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseProcessBlockForPipelineCommand" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUsePSCredentialType" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUsePSCredentialType" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSShouldProcess" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSShouldProcess" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseShouldProcessForStateChangingFunctions" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseShouldProcessForStateChangingFunctions" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseSupportsShouldProcess" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseSupportsShouldProcess" time="0.0236" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseToExportFieldsInManifest" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseToExportFieldsInManifest" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseUsingScopeModifierInNewRunspaces" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseUsingScopeModifierInNewRunspaces" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseUTF8EncodingForHelpFile" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSUseUTF8EncodingForHelpFile" time="0.0169" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSDSCUseIdenticalMandatoryParametersForDSC" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSDSCUseIdenticalParametersForDSC" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSDSCUseIdenticalParametersForDSC" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSDSCStandardDSCFunctionsInResource" name="Module.PSScriptAnalyzer Analysis.Test-PrivateFile.ps1.passes rule: PSDSCStandardDSCFunctionsInResource" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1" executed="True" result="Success" success="True" time="2.1071" asserts="0" description="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1">
                    <results>
                      <test-suite type="ParameterizedTest" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: &lt;RuleName&gt;" executed="True" result="Success" success="True" time="0.9828" asserts="0" description="passes rule: &lt;RuleName&gt;">
                        <results>
                          <test-case description="passes rule: PSAlignAssignmentStatement" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAlignAssignmentStatement" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingCmdletAliases" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidUsingCmdletAliases" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidAssignmentToAutomaticVariable" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidAssignmentToAutomaticVariable" time="0.0239" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidDefaultValueSwitchParameter" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidDefaultValueSwitchParameter" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidDefaultValueForMandatoryParameter" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidDefaultValueForMandatoryParameter" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingEmptyCatchBlock" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidUsingEmptyCatchBlock" time="0.0229" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidGlobalAliases" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidGlobalAliases" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidGlobalFunctions" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidGlobalFunctions" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidGlobalVars" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidGlobalVars" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidInvokingEmptyMembers" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidInvokingEmptyMembers" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidLongLines" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidLongLines" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidNullOrEmptyHelpMessageAttribute" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidOverwritingBuiltInCmdlets" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidOverwritingBuiltInCmdlets" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSReservedCmdletChar" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSReservedCmdletChar" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSReservedParams" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSReservedParams" time="0.0197" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidShouldContinueWithoutForce" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidShouldContinueWithoutForce" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingUsernameAndPasswordParams" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidUsingUsernameAndPasswordParams" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingComputerNameHardcoded" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidUsingComputerNameHardcoded" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingConvertToSecureStringWithPlainText" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingDeprecatedManifestFields" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidUsingDeprecatedManifestFields" time="0.0219" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingInvokeExpression" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidUsingInvokeExpression" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingPlainTextForPassword" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidUsingPlainTextForPassword" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingWMICmdlet" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidUsingWMICmdlet" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSAvoidUsingWriteHost" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSAvoidUsingWriteHost" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseCompatibleCommands" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseCompatibleCommands" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseCompatibleSyntax" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseCompatibleSyntax" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseCompatibleTypes" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseCompatibleTypes" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSMisleadingBacktick" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSMisleadingBacktick" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSMissingModuleManifestField" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSMissingModuleManifestField" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSPlaceCloseBrace" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSPlaceCloseBrace" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSPlaceOpenBrace" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSPlaceOpenBrace" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSPossibleIncorrectComparisonWithNull" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSPossibleIncorrectComparisonWithNull" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSPossibleIncorrectUsageOfRedirectionOperator" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSPossibleIncorrectUsageOfRedirectionOperator" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSReviewUnusedParameter" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSReviewUnusedParameter" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseApprovedVerbs" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseApprovedVerbs" time="0.0079" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseBOMForUnicodeEncodedFile" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseBOMForUnicodeEncodedFile" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseCmdletCorrectly" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseCmdletCorrectly" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseCompatibleCmdlets" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseCompatibleCmdlets" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseConsistentIndentation" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseConsistentIndentation" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseConsistentWhitespace" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseConsistentWhitespace" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseDeclaredVarsMoreThanAssignments" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseDeclaredVarsMoreThanAssignments" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseLiteralInitializerForHashtable" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseLiteralInitializerForHashtable" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseProcessBlockForPipelineCommand" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseProcessBlockForPipelineCommand" time="0.0283" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUsePSCredentialType" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUsePSCredentialType" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSShouldProcess" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSShouldProcess" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseShouldProcessForStateChangingFunctions" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseShouldProcessForStateChangingFunctions" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseSupportsShouldProcess" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseSupportsShouldProcess" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseToExportFieldsInManifest" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseToExportFieldsInManifest" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseUsingScopeModifierInNewRunspaces" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseUsingScopeModifierInNewRunspaces" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSUseUTF8EncodingForHelpFile" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSUseUTF8EncodingForHelpFile" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSDSCUseIdenticalMandatoryParametersForDSC" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSDSCUseIdenticalParametersForDSC" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSDSCUseIdenticalParametersForDSC" time="0.0198" asserts="0" success="True" result="Success" executed="True" />
                          <test-case description="passes rule: PSDSCStandardDSCFunctionsInResource" name="Module.PSScriptAnalyzer Analysis.Test-PublicFile.ps1.passes rule: PSDSCStandardDSCFunctionsInResource" time="0.0284" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\tests\Test-PublicFile.Tests.ps1" executed="True" result="Success" success="True" time="0.1748" asserts="0" description="C:\Users\petem\OneDrive\Documents\GitHub\DoubleDeploy\tests\Test-PublicFile.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Test-PublicFile" executed="True" result="Success" success="True" time="0.1056" asserts="0" description="Test-PublicFile">
            <results>
              <test-suite type="TestFixture" name="Test-PublicFile.Some Context" executed="True" result="Success" success="True" time="0.0714" asserts="0" description="Test-PublicFile.Some Context">
                <results>
                  <test-case description="passes some test" name="Test-PublicFile.Some Context.passes some test" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes some other test" name="Test-PublicFile.Some Context.passes some other test" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>